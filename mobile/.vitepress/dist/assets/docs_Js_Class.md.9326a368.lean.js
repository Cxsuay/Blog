import{_ as n,c as s,o as a,a as t}from"./app.f2ffefc6.js";const p='{"title":"Js - Class","description":"","frontmatter":{},"headers":[{"level":2,"title":"类的两种声明形式","slug":"类的两种声明形式"},{"level":2,"title":"类内部的工作机制其实就是原型操作","slug":"类内部的工作机制其实就是原型操作"},{"level":2,"title":"对象属性的声明","slug":"对象属性的声明"},{"level":2,"title":"class 声明的方法 为什么不能遍历","slug":"class-声明的方法-为什么不能遍历"},{"level":2,"title":"静态属性 和 静态方法的使用","slug":"静态属性-和-静态方法的使用"},{"level":2,"title":"访问器","slug":"访问器"},{"level":3,"title":"使用命名规则来保护属性","slug":"使用命名规则来保护属性"},{"level":3,"title":"使用 Symbol 来定义 protected(保护) 属性","slug":"使用-symbol-来定义-protected-保护-属性"},{"level":3,"title":"使用 weakMap 保护属性","slug":"使用-weakmap-保护属性"},{"level":3,"title":"private 私有属性使用","slug":"private-私有属性使用"},{"level":2,"title":"class 属性继承原理","slug":"class-属性继承原理"},{"level":2,"title":"super 关键字的原理","slug":"super-关键字的原理"},{"level":2,"title":"为什么子类 constructor 中会执行 super ；","slug":"为什么子类-constructor-中会执行-super-；"},{"level":2,"title":"super 总之就是原型链的攀升","slug":"super-总之就是原型链的攀升"},{"level":2,"title":"方法的重写","slug":"方法的重写"},{"level":2,"title":"静态继承的原理","slug":"静态继承的原理"},{"level":2,"title":"使用 instanceof 检测对象实现 - 对象 与 构造函数","slug":"使用-instanceof-检测对象实现-对象-与-构造函数"},{"level":2,"title":"isPrototypeOf 检测继承关系  - 对象与对象的关系","slug":"isprototypeof-检测继承关系-对象与对象的关系"},{"level":2,"title":"内置类继承的原型实现","slug":"内置类继承的原型实现"},{"level":2,"title":"mixin 混合模式使用技巧","slug":"mixin-混合模式使用技巧"}],"relativePath":"docs/Js/Class.md","lastUpdated":1632732114000}',o={},c=[t('',59)];var e=n(o,[["render",function(n,t,p,o,e,u){return a(),s("div",null,c)}]]);export{p as __pageData,e as default};
